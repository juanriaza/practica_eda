#BlueJ class context
comment0.params=
comment0.target=Card()
comment0.text=\r\n\ Generate\ a\ card\ with\ random\ properties\ (but\ not\ a\ joker)\r\n
comment1.params=colour\ value\ suit\ flipped
comment1.target=Card(Card.Colour,\ Card.Value,\ Card.Suit,\ boolean)
comment1.text=\r\n\ Generate\ a\ card\ with\ a\ colour,\ suit\ and\ value\r\n\ @param\ colour\ the\ colour\ of\ the\ card\r\n\ @param\ value\ the\ value\ of\ the\ card\r\n\ @param\ suit\ the\ suit\ of\ the\ card\r\n\ @param\ flipped\ true\ if\ the\ card\ is\ face\ down,\ false\ otherwise\r\n
comment10.params=
comment10.target=Card.Suit\ getSuit()
comment10.text=\r\n\ Get\ the\ suit\ of\ the\ card\r\n\ @return\ the\ suit\ of\ the\ card\r\n
comment11.params=
comment11.target=void\ act()
comment11.text=\r\n\ If\ we're\ allowed\ to\ drag\ the\ card\ around\ and\ manage\ the\ dragging.\r\n
comment12.params=
comment12.target=void\ nextTurn()
comment12.text=\r\n\ Pasa\ al\ siguiente\ turno\r\n
comment13.params=
comment13.target=void\ placeOnArow()
comment13.text=\r\n\ Coloca\ automaticamente\ la\ carta\ en\ la\ fila\ correspondiente\r\n
comment14.params=
comment14.target=void\ getCardsOn()
comment14.text=\r\n\ Calcula\ las\ cartas\ que\ estan\ encima\ de\ la\ carta\ actual\r\n\ @return\ una\ lista\ con\ las\ cartas\ que\ estan\ encima\ de\ la\ carta\ actual\r\n
comment15.params=
comment15.target=void\ leaveAllCardsAsBefore()
comment15.text=\r\n\ Dejar\ las\ cartas\ como\ antes,\ si\ se\ ha\ arrastrado\ una\ carta\ de\ la\ mitad\r\n
comment16.params=
comment16.target=void\ placeInAccepter()
comment16.text=\r\n\ Intenta\ colocar\ la\ carta\ en\ las\ manos\ de\ un\ jugador\ o\ una\ fila,\ que\ hacen\ intersecci\u00F3n\ con\ la\ carta\r\n
comment17.params=x\ y
comment17.target=void\ setInitial(int,\ int)
comment17.text=\r\n\ Set\ the\ initial\ co-ordinates\ of\ the\ card.\r\n
comment18.params=
comment18.target=int\ getInitialx()
comment18.text=\r\n\ Get\ the\ initial\ x\ value\ of\ the\ card.\r\n
comment19.params=
comment19.target=int\ getInitialy()
comment19.text=\r\n\ Get\ the\ initial\ y\ value\ of\ the\ card.\r\n
comment2.params=colour\ flipped
comment2.target=Card(Card.Colour,\ boolean)
comment2.text=\r\n\ Special\ constructor\ called\ by\ the\ joker\r\n
comment20.params=
comment20.target=Accepter\ getAccepter()
comment20.text=\r\n\ Get\ the\ Player\ or\ CardRow\ is\ part\ of.\r\n
comment21.params=accepter
comment21.target=void\ setAccepter(Accepter)
comment21.text=\r\n\ Set\ the\ Player\ or\ CardRow\ is\ part\ of.\r\n
comment22.params=
comment22.target=void\ reAdd()
comment22.text=\r\n\ Remove\ and\ add\ the\ object\ to\ the\ world\r\n
comment3.params=
comment3.target=void\ draw()
comment3.text=\r\n\ Select\ the\ image\ of\ the\ card\ based\ on\ its\ suit,\ value\ and\ colour\r\n\ and\ draw\ it.\r\n
comment4.params=flipped
comment4.target=void\ setFlipped(boolean)
comment4.text=\r\n\ Set\ whether\ the\ card\ is\ flipped\ over\ or\ not\r\n\ @param\ flipped\ true\ if\ the\ card\ is\ face\ down,\ false\ otherwise\r\n
comment5.params=drag
comment5.target=void\ setDraggable(boolean)
comment5.text=\r\n\ Set\ whether\ we\ can\ drag\ the\ card\ around\ or\ not\r\n\ @param\ drag\ true\ if\ we\ can\ drag\ it\ around,\ false\ otherwise\r\n
comment6.params=
comment6.target=boolean\ isDraggable()
comment6.text=\r\n\ Determine\ whether\ we\ can\ drag\ the\ card\ around\ or\ not\r\n\ @return\ true\ if\ we\ can\ drag\ it\ around,\ false\ otherwise\r\n
comment7.params=
comment7.target=boolean\ isFlipped()
comment7.text=\r\n\ Determine\ whether\ the\ card\ is\ flipped\ or\ not\r\n\ @return\ true\ if\ the\ card\ is\ face\ down,\ false\ otherwise\r\n
comment8.params=
comment8.target=Card.Colour\ getColour()
comment8.text=\r\n\ Get\ the\ colour\ of\ the\ card\r\n\ @return\ the\ colour\ of\ the\ card\r\n
comment9.params=
comment9.target=Card.Value\ getValue()
comment9.text=\r\n\ Get\ the\ value\ of\ the\ card\r\n\ @return\ the\ value\ of\ the\ card\r\n
numComments=23
